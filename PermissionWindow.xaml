<Window x:Class="Magazyn.PermissionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Magazyn"
        mc:Ignorable="d"
        Title="Nadaj uprawnienia"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize"
        WindowState="Maximized"
        WindowStyle="SingleBorderWindow"
        ShowInTaskbar="True">
    <Window.Resources>
        <!-- Kolory -->
        <SolidColorBrush x:Key="DarkGreen" Color="#134E4A"/>
        <SolidColorBrush x:Key="LightBackground" Color="White"/>
        <SolidColorBrush x:Key="TextMain" Color="#1E293B"/>
        <SolidColorBrush x:Key="BadgeGreen" Color="#22C55E"/>
        <SolidColorBrush x:Key="BadgeYellow" Color="#FACC15"/>
        <SolidColorBrush x:Key="BadgeGray" Color="#94A3B8"/>
        <SolidColorBrush x:Key="BadgeRed" Color="#EF4444"/>

        <!-- Styl zaokrąglonego przycisku -->
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource BadgeYellow}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Styl przycisku Modify -->
        <Style x:Key="ModifyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#F1F5F9"/>
            <Setter Property="Foreground" Value="#1E293B"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6" SnapsToDevicePixels="True">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0">
                                <TextBlock Text="👤" FontSize="14" Margin="0,0,6,0"/>
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E2E8F0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#CBD5E1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Styl komórek DataGrid z odstępami między kolumnami -->
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,0,0,0"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <!-- Dodany margines między kolumnami -->
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Styl nagłówków kolumn DataGrid z odstępami -->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#F9FAFB"/>
            <Setter Property="BorderBrush" Value="#E5E7EB"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="SeparatorVisibility" Value="Collapsed"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <!-- Dodany margines między nagłówkami kolumn -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="67*"/>
            <RowDefinition Height="89*"/>
        </Grid.RowDefinitions>
        <!-- Pasek górny -->
        <Border Background="{DynamicResource TextMain}" Height="60" VerticalAlignment="Top">
            <DockPanel Margin="20,0" LastChildFill="False">
                <!-- Tytuł -->
                <TextBlock Text="👥 Nadawanie uprawnień"
                           FontSize="18"
                           Foreground="White"
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           DockPanel.Dock="Left"/>

                <!-- Przyciski po prawej stronie -->
                <StackPanel Orientation="Horizontal"
                            DockPanel.Dock="Right"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                            Margin="0,0,10,0">
                    <!-- Powrót -->
                    <Button Content="↩ Powrót"
                            Width="100" Height="30"
                            Margin="0,0,0,0"
                            Style="{StaticResource RoundedButtonStyle}"
                            Background="#94A3B8"
                            Foreground="White" Click="Button_Click"/>
                </StackPanel>
            </DockPanel>
        </Border>

        <!-- Główna zawartość -->
        <Border Background="{StaticResource LightBackground}" CornerRadius="12" Margin="40,80,40,144" Padding="20" Grid.RowSpan="2">
            <Grid>
                <!-- DataGrid -->
                <DataGrid x:Name="UserDataGrid"
          Grid.Row="1"
          AutoGenerateColumns="False"
          HeadersVisibility="Column"
          IsReadOnly="True"
          CanUserAddRows="False"
          CanUserReorderColumns="False"
          CanUserSortColumns="False"
          RowHeight="60"
          RowHeaderWidth="0"
          GridLinesVisibility="None"
          BorderThickness="0"
          AlternatingRowBackground="White"
          RowBackground="White"
          ColumnHeaderHeight="40"
          EnableRowVirtualization="False"
          SelectionMode="Single"
          SelectionUnit="FullRow"
          Background="Transparent"
          Margin="0,0,0,-56"
          ItemsSource="{Binding Users}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Imię" Binding="{Binding FirstName}" Width="*" />
                        <DataGridTextColumn Header="Nazwisko" Binding="{Binding LastName}" Width="*" />
                        <DataGridTextColumn Header="Login" Binding="{Binding Login}" Width="*" />
                        <DataGridTemplateColumn Header="" Width="220">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <!-- Przyciski lub inne elementy -->
                                        <Button Content="Nadanie uprawnień"
                               
                                Tag="{Binding}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

            </Grid>
        </Border>
    </Grid>
</Window>
